version: "3.9"

services:
  nginx:
    image: nginx
    restart: always 
    volumes:
      - ./packages/client/nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./index.html:/usr/share/nginx/html/index.html
    ports:
      - "80:80"
      - "443:443"
  
  client:
    container_name: prakticum-client
    image: prakticum-client
    build:
        context: .
        dockerfile: Dockerfile.client
        args:
          CLIENT_PORT: ${CLIENT_PORT}
    restart: always 
    ports:
      - "3000:3000"
    environment:
      - CLIENT_PORT=${CLIENT_PORT}
      - NODE_ENV="production"
      
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    
  postgres:
    image: postgres:14     
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: "exit 0"
  
  server:
    container_name: prakticum-server
    image: prackicum-server
    build:
        context: .
        dockerfile: Dockerfile.server
        args:
          SERVER_PORT: ${SERVER_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    ports:
        - "81:81"
    environment:
      SERVER_PORT: 81
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
